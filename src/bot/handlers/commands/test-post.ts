// import { logger } from "../../../utils/logger.js";
// import { MyContext } from "../../../types/context.js";
// import { channelService } from "../../../services/channel-service.js";

// /**
//  * –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª
//  */
// export async function testPostCommand(ctx: MyContext) {
//   const userId = ctx.from?.id;

//   if (!userId) {
//     await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
//     return;
//   }

//   try {
//     // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
//     const selectedChannel = ctx.session.selectedChannel;
//     if (!selectedChannel) {
//       await ctx.reply('‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω –∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /select_channel –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞.');
//       return;
//     }

//     const channelId = channelService.getChannelId(selectedChannel);

//     logger.info({
//       msg: 'Sending test post to channel',
//       userId,
//       channelId,
//       channelName: selectedChannel.name,
//     });

//     // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
//     await ctx.api.sendMessage(channelId, 'üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Fintech Bot', {
//       parse_mode: "HTML"
//     });

//     // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–¥–º–∏–Ω—É
//     await ctx.reply(`‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª **${selectedChannel.name}**!\n\nüì∫ Channel ID: \`${channelId}\``);

//     logger.info({
//       msg: 'Test post sent successfully',
//       userId,
//       channelId,
//       channelName: selectedChannel.name,
//     });

//   } catch (error) {
//     logger.error({
//       msg: 'Failed to send test post',
//       userId,
//       channelId: ctx.session.selectedChannel ? channelService.getChannelId(ctx.session.selectedChannel) : 'unknown',
//       channelName: ctx.session.selectedChannel?.name,
//       error: error instanceof Error ? error.message : String(error),
//     });

//     // –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–∫–∏
//     if (error instanceof Error) {
//       let errorDetails = '';

//       // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏ Telegram API
//       if (error.message.includes('chat not found')) {
//         errorDetails = '\n\nüîç **–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**\n‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π ID –∫–∞–Ω–∞–ª–∞\n‚Ä¢ –ë–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª\n‚Ä¢ –ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω –∏–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω';
//       } else if (error.message.includes('not enough rights')) {
//         errorDetails = '\n\nüîç **–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**\n‚Ä¢ –ë–æ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞\n‚Ä¢ –£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π';
//       } else if (error.message.includes('bot was blocked')) {
//         errorDetails = '\n\nüîç **–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**\n‚Ä¢ –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ\n‚Ä¢ –ù—É–∂–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞';
//       }

//       await ctx.reply(
//         `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞:\n\`${error.message}\`${errorDetails}`,
//         { parse_mode: "Markdown" }
//       );
//     } else {
//       await ctx.reply(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞: ${String(error)}`);
//     }
//   }
// }

// /**
//  * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
//  */
// export async function testPostWithImageCommand(ctx: MyContext) {
//   const userId = ctx.from?.id;

//   if (!userId) {
//     await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
//     return;
//   }

//   try {
//     // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª
//     const selectedChannel = ctx.session.selectedChannel;
//     if (!selectedChannel) {
//       await ctx.reply('‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω –∫–∞–Ω–∞–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /select_channel –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞.');
//       return;
//     }

//     const channelId = channelService.getChannelId(selectedChannel);

//     logger.info({
//       msg: 'Sending test post with image to channel',
//       userId,
//       channelId,
//       channelName: selectedChannel.name,
//     });

//     // –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–ª–æ–≥–æ—Ç–∏–ø Telegram)
//     const testImageUrl = 'https://telegram.org/img/t_logo.png';

//     // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
//     try {
//       await ctx.api.sendPhoto(channelId, testImageUrl, {
//         caption: 'üñºÔ∏è **–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º**\n\n–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π –æ—Ç Fintech Bot\n\nü§ñ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç!',
//         parse_mode: "Markdown"
//       });

//       logger.info({
//         msg: 'Test post with image sent successfully',
//         userId,
//         channelId,
//         channelName: selectedChannel.name,
//         imageUrl: testImageUrl,
//       });

//     } catch (photoError) {
//       logger.warn({
//         msg: 'Failed to send test post with image, trying without image',
//         userId,
//         channelId,
//         channelName: selectedChannel.name,
//         imageUrl: testImageUrl,
//         error: photoError instanceof Error ? photoError.message : String(photoError)
//       });

//       // Fallback: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
//       await ctx.api.sendMessage(channelId, 'üñºÔ∏è **–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è**\n\n–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Fintech Bot\n\nü§ñ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç!', {
//         parse_mode: "Markdown"
//       });

//       logger.info({
//         msg: 'Test post without image sent successfully (fallback)',
//         userId,
//         channelId,
//         channelName: selectedChannel.name
//       });
//     }

//     // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∞–¥–º–∏–Ω—É
//     await ctx.reply(`‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª **${selectedChannel.name}**!\n\nüì∫ Channel ID: \`${channelId}\``);

//   } catch (error) {
//     logger.error({
//       msg: 'Failed to send test post with image',
//       userId,
//       channelId: ctx.session.selectedChannel ? channelService.getChannelId(ctx.session.selectedChannel) : 'unknown',
//       channelName: ctx.session.selectedChannel?.name,
//       error: error instanceof Error ? error.message : String(error),
//     });

//     await ctx.reply(
//       `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º:\n\`${error instanceof Error ? error.message : String(error)}\``,
//       { parse_mode: "Markdown" }
//     );
//   }
// }

// /**
//  * –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞–Ω–∞–ª–∞
//  */
// export async function checkChannelCommand(ctx: MyContext) {
//   const userId = ctx.from?.id;

//   try {
//     const selectedChannel = ctx.session.selectedChannel;

//     let statusMessage = 'üìä **–°—Ç–∞—Ç—É—Å –∫–∞–Ω–∞–ª–æ–≤:**\n\n';

//     if (!selectedChannel) {
//       statusMessage += '‚ùå –ö–∞–Ω–∞–ª –Ω–µ –≤—ã–±—Ä–∞–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã\n';
//       statusMessage += 'üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /select_channel –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞–Ω–∞–ª–∞\n\n';

//       // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
//       const allChannels = channelService.getAllChannels();
//       if (allChannels.length > 0) {
//         statusMessage += '**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:**\n';
//         allChannels.forEach((channel, index) => {
//           statusMessage += `${index + 1}. **${channel.name}** - \`${channelService.getChannelId(channel)}\`\n`;
//         });
//       } else {
//         statusMessage += '‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n';
//       }
//     } else {
//       const channelId = channelService.getChannelId(selectedChannel);
//       statusMessage += `üì¢ **–¢–µ–∫—É—â–∏–π –∫–∞–Ω–∞–ª:** ${selectedChannel.name}\n`;
//       statusMessage += `üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** ${selectedChannel.description}\n`;
//       statusMessage += `‚úÖ Channel ID –Ω–∞—Å—Ç—Ä–æ–µ–Ω: \`${channelId}\`\n\n`;

//       try {
//         // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
//         const chat = await ctx.api.getChat(channelId);
//         statusMessage += `üì∫ **–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:** ${chat.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}\n`;
//         statusMessage += `üë• **–¢–∏–ø:** ${chat.type}\n`;

//         if ('username' in chat && chat.username) {
//           statusMessage += `üîó **Username:** @${chat.username}\n`;
//         }

//         // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
//         try {
//           const member = await ctx.api.getChatMember(channelId, ctx.me.id);
//           statusMessage += `ü§ñ **–°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:** ${member.status}\n`;

//           if (member.status === 'administrator') {
//             statusMessage += '‚úÖ –ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n';
//           } else if (member.status === 'member') {
//             statusMessage += '‚ö†Ô∏è –ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–º (–Ω—É–∂–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞)\n';
//           }
//         } catch (memberError) {
//           statusMessage += '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ\n';
//         }

//       } catch (chatError) {
//         statusMessage += '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ\n';
//         statusMessage += `üîç –û—à–∏–±–∫–∞: \`${chatError instanceof Error ? chatError.message : String(chatError)}\`\n`;
//       }
//     }

//     await ctx.reply(statusMessage, { parse_mode: "Markdown" });

//     logger.info({
//       msg: 'Channel status checked',
//       userId,
//       channelId: selectedChannel ? channelService.getChannelId(selectedChannel) : 'not selected',
//       channelName: selectedChannel?.name,
//     });

//   } catch (error) {
//     logger.error({
//       msg: 'Failed to check channel status',
//       userId,
//       error: error instanceof Error ? error.message : String(error),
//     });

//     await ctx.reply(
//       `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–∞–Ω–∞–ª–∞:\n\`${error instanceof Error ? error.message : String(error)}\``,
//       { parse_mode: "Markdown" }
//     );
//   }
// }
