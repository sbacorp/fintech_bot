import { MyContext } from '../types/context.js';
import { logger } from '../utils/logger.js';
import { config } from '../config/index.js';

// –ü—Ä–æ—Å—Ç–æ–µ in-memory —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
interface MessageStats {
  totalMessages: number;
  messagesLast24h: number;
  messagesLast7days: number;
  messagesLast30days: number;
  lastUpdated: number;
}

let messageStats: MessageStats = {
  totalMessages: 0,
  messagesLast24h: 0,
  messagesLast7days: 0,
  messagesLast30days: 0,
  lastUpdated: Date.now()
};

// –ú–∞—Å—Å–∏–≤ —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥—ã)
const messageTimestamps: number[] = [];

/**
 * Middleware –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ
 */
export function messageTrackerMiddleware() {
  return async (ctx: MyContext, next: () => Promise<void>) => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞
    if (ctx.channelPost && ctx.channelPost.chat.id.toString() === config.CHANNEL_ID) {
      try {
        const messageDate = ctx.channelPost.date * 1000; // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É
        messageTimestamps.push(messageDate);
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
        const thirtyDaysAgo = Date.now() - (30 * 24 * 60 * 60 * 1000);
        const recentMessages = messageTimestamps.filter(timestamp => timestamp > thirtyDaysAgo);
        messageTimestamps.length = 0;
        messageTimestamps.push(...recentMessages);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        updateMessageStats();
        
        logger.info({
          msg: 'Channel message tracked',
          channelId: config.CHANNEL_ID,
          messageId: ctx.channelPost.message_id,
          totalTracked: messageStats.totalMessages,
          last24h: messageStats.messagesLast24h
        });
        
      } catch (error) {
        logger.error({
          msg: 'Failed to track channel message',
          error: error instanceof Error ? error.message : String(error)
        });
      }
    }
    
    await next();
  };
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
 */
function updateMessageStats() {
  const now = Date.now();
  const oneDayAgo = now - (24 * 60 * 60 * 1000);
  const sevenDaysAgo = now - (7 * 24 * 60 * 60 * 1000);
  const thirtyDaysAgo = now - (30 * 24 * 60 * 60 * 1000);
  
  messageStats = {
    totalMessages: messageTimestamps.length,
    messagesLast24h: messageTimestamps.filter(timestamp => timestamp > oneDayAgo).length,
    messagesLast7days: messageTimestamps.filter(timestamp => timestamp > sevenDaysAgo).length,
    messagesLast30days: messageTimestamps.filter(timestamp => timestamp > thirtyDaysAgo).length,
    lastUpdated: now
  };
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
 */
export function getTrackedMessageStats(): MessageStats {
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º
  updateMessageStats();
  return { ...messageStats };
}

/**
 * –û—á–∏—â–∞–µ—Ç —Å–æ–±—Ä–∞–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
 */
export function clearTrackedStats(): void {
  messageTimestamps.length = 0;
  messageStats = {
    totalMessages: 0,
    messagesLast24h: 0,
    messagesLast7days: 0,
    messagesLast30days: 0,
    lastUpdated: Date.now()
  };
  logger.info({ msg: 'Tracked message stats cleared' });
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—Ä–µ–∫–∏–Ω–≥–µ
 */
export function getTrackingInfo(): string {
  const stats = getTrackedMessageStats();
  const uptimeHours = Math.round((Date.now() - stats.lastUpdated) / (1000 * 60 * 60));
  
  return `üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–µ–∫–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π:**

üìà **–°–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:**
‚îú –í—Å–µ–≥–æ –æ—Ç—Å–ª–µ–∂–µ–Ω–æ: ${stats.totalMessages}
‚îú –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞: ${stats.messagesLast24h}
‚îú –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π: ${stats.messagesLast7days}
‚îî –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π: ${stats.messagesLast30days}

‚è∞ **–í—Ä–µ–º—è —Å–±–æ—Ä–∞:** ${uptimeHours} —á–∞—Å–æ–≤

üí° **–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:** –î–∞–Ω–Ω—ã–µ —Å–æ–±–∏—Ä–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å –º–æ–º–µ–Ω—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
–î–ª—è –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ.`;
}
